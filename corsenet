NotImplementedError                       Traceback (most recent call last)
Cell In[8], line 11
      9 from keras import backend as K
     10 from MinutiaeNet_utils import *
---> 11 from CoarseNet_utils import *
     12 from CoarseNet_model import *
     13 import argparsea

File ~\Downloads\MinutiaeNet_Modified_Latest\CoarseNet\CoarseNet_utils.py:366
    364     model = Model(inputs=[img_input,], outputs=[theta,])
    365     return model
--> 366 tra_ori_model = get_tra_ori()
    368 def get_maximum_img_size_and_names(dataset, sample_rate=None, max_size=None):
    370     if isinstance(dataset, str):

File ~\Downloads\MinutiaeNet_Modified_Latest\CoarseNet\CoarseNet_utils.py:363, in get_tra_ori()
    361 def get_tra_ori():
    362     img_input=Input(shape=(None, None, 1))
--> 363     theta = Lambda(orientation)(img_input)
    364     model = Model(inputs=[img_input,], outputs=[theta,])
    365     return model

File ~\AppData\Local\miniforge3\Lib\site-packages\keras\src\utils\traceback_utils.py:122, in filter_traceback.<locals>.error_handler(*args, **kwargs)
    119     filtered_tb = _process_traceback_frames(e.__traceback__)
    120     # To get the full stack trace, call:
    121     # `keras.config.disable_traceback_filtering()`
--> 122     raise e.with_traceback(filtered_tb) from None
    123 finally:
    124     del filtered_tb

File ~\AppData\Local\miniforge3\Lib\site-packages\keras\src\layers\core\lambda_layer.py:95, in Lambda.compute_output_shape(self, input_shape)
     93         return tree.map_structure(lambda x: x.shape, output_spec)
     94     except:
---> 95         raise NotImplementedError(
     96             "We could not automatically infer the shape of "
     97             "the Lambda's output. Please specify the `output_shape` "
     98             "argument for this Lambda layer."
     99         )
    101 if callable(self._output_shape):
    102     return self._output_shape(input_shape)

NotImplementedError: Exception encountered when calling Lambda.call().

We could not automatically infer the shape of the Lambda's output. Please specify the `output_shape` argument for this Lambda layer.

Arguments received by Lambda.call():
  • args=('<KerasTensor shape=(None, None, None, 1), dtype=float32, sparse=False, name=keras_tensor_6>',)
  • kwargs={'mask': 'None'}
