I have made basic changes to the Rural Development_pending HQL file. Please use the below doc as reference and work on updating this file.

1st file : rulardevelopment pending hql file information:  CREATE EXTERNAL TABLE IF NOT EXISTS pisprd_raw.DC_MUSTER_ROLLS_INFO 
(WORKER_CODE CHAR(2),
WORKER_TYPE CHAR(1),
JOB_CODE NUMBER,
APPROVER_CODE VARCHAR(12),
WORK_CODE VARCHAR(18),
HOUSEHOLD_CODE VARCHAR(18),
WORKPROGRESS_CODE NUMBER,
PAYORDERGENERATED CHAR(1),
NOOFDAYSWORKED NUMBER,
GROUPNUMBER VARCHAR(100),
DISTANCE CHAR(1),
SKILL VARCHAR(50),
SHARPENING_CROWBAR CHAR(1),
PCC_INFO_CODE VARCHAR(9),
GROUP_MESTRI CHAR(1),
MUSTER_ROLL_ID VARCHAR(16),
IS_MATE CHAR(1),
GROUP_ID VARCHAR(25),
CREATED_DATE DATE,
MODIFIED_DATE DATE,
CREATED_BY VARCHAR(20),
MODIFIED_BY VARCHAR(20),
GROUPNUMBER_TELUGU VARCHAR(100),
IS_WORKED_ON_MON CHAR(1),
IS_WORKED_ON_TUE CHAR(1),
IS_WORKED_ON_WED CHAR(1),
IS_WORKED_ON_THU CHAR(1),
IS_WORKED_ON_FRI CHAR(1),
IS_WORKED_ON_SAT CHAR(1)
);
CREATE EXTERNAL TABLE IF NOT EXISTS pisprd_raw.DC_SMARTCARD_EPAYORDER 
(DISTRICT_NAME VARCHAR(50),
MANDAL_NAME VARCHAR(50),
PANCHAYAT_NAME VARCHAR(30),
VILLAGE_NAME VARCHAR(50),
HABITATION_NAME VARCHAR(100),
HOUSEHOLD_CODE VARCHAR(18),
WORKER_CODE CHAR(2),
NAME VARCHAR(70),
SURNAME VARCHAR(50),
AGE NUMBER,
SEX CHAR(1),
CASTE VARCHAR(10),
SMARTCARD_NO VARCHAR(50),
ACCOUNT_NO VARCHAR(25),
DAYS_WORKED VARCHAR(20),
AMOUNT NUMBER,
PAYMENT_CODE NUMBER,
FTR_NO VARCHAR(13),
PAYORDER_NO VARCHAR(20),
PAYORDER_DATE DATE,
TRANSACTION_ID CHAR(13),
PAYING_AGENCY_NAME VARCHAR(150),
E_PAYORDER_NO VARCHAR(16),
DOWNLOAD_FLAG CHAR(1) DEFAULT 'G',
DISBURSED_FTRNO VARCHAR(13),
PCC_INFO_CODE VARCHAR(9),
CREATED_DATE DATE,
MODIFIED_DATE DATE,
CREATED_BY VARCHAR(20),
MODIFIED_BY VARCHAR(20),
SE_UID VARCHAR(12),
HH_IFSC_CODE VARCHAR(11),
SOL_ID VARCHAR(10),
WORKER_TYPE CHAR(1),
IS_BANK_PAYMENT CHAR(1),
DEDUCTION_AMT NUMBER,
DEDUCTION_REASON VARCHAR(500)
);
CREATE EXTERNAL TABLE IF NOT EXISTS pisprd_raw.MUSTER_ROLLS_INFO 
(MRI_WORKER_CODE CHAR(2),
MRI_WORKER_TYPE CHAR(1),
MRI_JOB_CODE NUMBER(10,0),
MRI_APPROVER_CODE VARCHAR(20),
MRI_CREATED_BY VARCHAR(7),
MRI_CREATED_DATE DATE,
MRI_WORK_CODE VARCHAR(18),
MRI_HOUSEHOLD_CODE VARCHAR(18),
MRI_WORKPROGRESS_CODE NUMBER(19,0),
MRI_PAYORDERGENERATED CHAR(1),
MRI_NOOFDAYSWORKED FLOAT(126),
MRI_GROUPNUMBER VARCHAR(100),
MRI_DISTANCE CHAR(1),
MRI_SKILL VARCHAR(50),
MRI_SHARPENING_CROWBAR CHAR(1),
MRI_GROUP_MESTRI CHAR(1),
MRI_MUSTER_ROLL_ID VARCHAR(12),
MRI_IS_MATE CHAR(1),
MRI_GROUP_ID VARCHAR(25),
MRI_GROUPNUMBER_TELUGU VARCHAR(300),
MRI_PCC_INFO_CODE VARCHAR(9),
MRI_MODIFIED_BY VARCHAR(7),
MRI_MODIFIED_DATE DATE,
MRI_FIELDASSISTANT_CODE VARCHAR(20),
MRI_MATE_SHADE NUMBER(10,2),
MRI_MATE_FIRSTAID NUMBER(10,2),
MRI_DOWNLOADEDDAYS NUMBER(10,0),
MRI_MATE_DAYSWORKED NUMBER,
MRI_IS_TRAVEL_ALLOWANCE CHAR(1),
MRI_IS_WORKED_ON_MON CHAR(1),
MRI_IS_WORKED_ON_TUE CHAR(1),
MRI_IS_WORKED_ON_WED CHAR(1),
MRI_IS_WORKED_ON_THU CHAR(1),
MRI_IS_WORKED_ON_FRI CHAR(1),
MRI_IS_WORKED_ON_SAT CHAR(1),
MRI_EMMS_REASON VARCHAR(1000),
MRI_PEAK_SM_ID VARCHAR(30),
MRI_IS_WORKED_ON_MON1 CHAR(1),
MRI_IS_WORKED_ON_TUE1 CHAR(1),
MRI_IS_WORKED_ON_WED1 CHAR(1),
MRI_IS_WORKED_ON_THU1 CHAR(1),
MRI_IS_WORKED_ON_FRI1 CHAR(1),
MRI_IS_WORKED_ON_SAT1 CHAR(1),
MRI_BM_SUPPLIER_ID VARCHAR(20),
MRI_IS_BM_SUPPLIED CHAR(1),
MRI_IS_BM_SUPP CHAR(1)
);
CREATE EXTERNAL TABLE IF NOT EXISTS pisprd_raw.AC_FTOAMT_DETAILS 
(WORK_CODE VARCHAR(20),
PCC_INFO_CODE VARCHAR(20),
ACTUAL_AMT NUMBER,
BASE_AMT NUMBER,
CGST_AMT NUMBER,
SGST_AMT NUMBER,
IGST_AMT NUMBER,
TDS_IT_AMT NUMBER,
TDS_CGST_AMT NUMBER,
TDS_SGST_AMT NUMBER,
TDS_IGST_AMT NUMBER,
TDS_WITHHOLD_AMT NUMBER,
TOTAL_DEDUCTION_AMT NUMBER,
FINAL_PAY_AMT NUMBER,
SUP_PAYORDER_NO VARCHAR(20),
SUP_TRANSACTION_ID VARCHAR(20),
SUP_VOUCHER_NO VARCHAR(20),
SUP_FTO_NO VARCHAR(20),
IT_DEDUCT_PAYORDER_NO VARCHAR(20),
IT_DEDUCT_TRANSACTION_ID VARCHAR(20),
IT_DEDUCT_VOUCHER_NO VARCHAR(20),
IT_DEDUCT_FTO_NO VARCHAR(20),
CGST_PAYORDER_NO VARCHAR(20),
CGST_TRANSACTION_ID VARCHAR(20),
CGST_VOUCHER_NO VARCHAR(20),
CGST_FTO_NO VARCHAR(20),
SGST_PAYORDER_NO VARCHAR(20),
SGST_TRANSACTION_ID VARCHAR(20),
SGST_VOUCHER_NO VARCHAR(20),
SGST_FTO_NO VARCHAR(20),
WITHHOLD_PAYORDER_NO VARCHAR(20),
WITHHOLD_TRANSACTION_ID VARCHAR(20),
WITHHOLD_VOUCHER_NO VARCHAR(20),
WITHHOLD_FTO_NO VARCHAR(20),
WORKPROGRESS_ID VARCHAR(10),
CREATED_BY VARCHAR(100),
CREATED_DATE DATE,
MODIFIED_BY VARCHAR(100),
MODIFIED_DATE DATE,
WFILE_PAYORDER_NO VARCHAR(20),
WFILE_TRANSACTION_ID VARCHAR(20),
WFILE_VOUCHER_NO VARCHAR(20),
WFILE_FTO_NO VARCHAR(20),
WFILE_WORKPROGRESS_ID VARCHAR(10),
SUP_REIMBURSE_PAYORDER_NO VARCHAR(20),
SUP_REIMBURSE_TRANSACTION_ID VARCHAR(20),
SUP_REIMBURSE_VOUCHER_NO VARCHAR(20),
SUP_REIMBURSE_FTO_NO VARCHAR(20),
SUP_REIMBURSE_AMOUNT NUMBER
);
CREATE EXTERNAL TABLE IF NOT EXISTS pisprd_raw.DWMA_ACCTD_HOA_MASTER 
(HOA_ID CHAR(2),
HOA_NAME VARCHAR(60),
TYPE CHAR(1),
PROJECT_TYPE VARCHAR(20),
CREATED_DATE DATE,
MODIFIED_DATE DATE,
CREATED_BY VARCHAR(20),
MODIFIED_BY VARCHAR(20)
);
CREATE EXTERNAL TABLE IF NOT EXISTS pisprd_raw.APREGS_USER.DYNAMIC_REPORTDETAILS_R616 
(DISTRICT_NAME VARCHAR(2000),
BLOCK_NAME VARCHAR(2000),
PANCHAYAT_NAME VARCHAR(2000),
WORK_START_FIN_YEAR VARCHAR(2000),
WORK_STATUS VARCHAR(2000),
WORK_CODE VARCHAR(2000),
WORK_NAME VARCHAR(2000),
MASTER_WORK_CATEGORY_NAME VARCHAR(2000),
WORK_CATEGORY_NAME VARCHAR(2000),
WORK_TYPE_NEW_MODULE VARCHAR(2000),
WORK_TYPE VARCHAR(2000),
AGENCY_NAME VARCHAR(2000),
SANCTION_AMOUNTIN_WAGE_RS NUMBER,
SANCTION_AMOUNTIN_MAT_RS NUMBER,
SANCTION_AMOUNTIN_RS NUMBER,
WAGE_PAID_CFY NUMBER,
MAT_PAID_CFY NUMBER,
TOTAL_AMOUNT_PAID_INCEPTION_RS NUMBER,
TOTAL_MANDAYS NUMBER,
MANDAYS_CFY NUMBER,
NO_OF_UNITS VARCHAR(2000),
IS_SECURE VARCHAR(2000),
IS_CONVERGENCE VARCHAR(2000),
WORK_STARTED_DATE VARCHAR(2000),
WORK_PHYSICALLY_COMPLETED_DATE VARCHAR(2000),
DISTRICT_ID VARCHAR(30),
MANDAL_ID VARCHAR(30),
CREATED_DATE DATE,
CREATED_BY VARCHAR(250),
MODIFIED_DATE DATE,
MODIFIED_BY VARCHAR(250),
DID_NEW VARCHAR(250),
MID_NEW VARCHAR(250),
WORK_MASTER VARCHAR(2000),
PID VARCHAR(2),
WORK_MASTER_NEW VARCHAR(2000),
MAIN_CATEGORY VARCHAR(2000),
AGRI_NRM_NONNRM VARCHAR(2000),
SUB_WORK_MASTER VARCHAR(2000),
COM_PROGRAMME VARCHAR(2000),
COM_MAT_CAT VARCHAR(2000),
COM_TRANSACTION_DATE DATE,
COM_MASTER_WORK_CATEGORY_NAME VARCHAR(2000),
WAGE_PAID_INCEPTION_RS NUMBER,
MAT_PAID_INCEPTION_RS NUMBER,
WORK_CAT_TYPE VARCHAR(200),
WORK_CAT_NAME VARCHAR(500),
WAGE_BOOKED_INCEPTION NUMBER,
MAT_BOOKED_INCEPTION NUMBER,
IS_EXPT_ONGO_COMM_WRKS_20GP VARCHAR(2)
);
CREATE EXTERNAL TABLE IF NOT EXISTS pisprd_raw.WCC_ACCT_CLASS_MASTER 
(HOA_ID CHAR(2),
CLASS_ID CHAR(2),
CLASS_NAME VARCHAR(100),
STATUS CHAR(1),
TYPE CHAR(1),
LEVELTYPE VARCHAR(5),
CLASS_CEILING NUMBER,
ADVANCE CHAR(2),
CEILING_TYPE CHAR(2),
CREATED_DATE DATE,
CREATED_BY VARCHAR(20),
MODIFIED_DATE DATE,
MODIFIED_BY VARCHAR(20),
CLAIMANT_TYPE CHAR(2),
ORG_TYPE VARCHAR(1) DEFAULT 'G',
FLAG CHAR(1),
CATEGORY_ID VARCHAR(2),
CLASS_TYPE VARCHAR(100),
CLASS_DESC VARCHAR(100),
PFMS_HOA_ID VARCHAR(10),
TECHNICAL_SPECIFICATIONS VARCHAR(1000)
);
CREATE EXTERNAL TABLE IF NOT EXISTS pisprd_raw.AC_APD_DETAILS 
(DISTRICT_ID VARCHAR(2),
CLUSTER_ID VARCHAR(3),
APD_NAME VARCHAR(500),
PCC_INFO_CODE VARCHAR(10),
BANK_NAME VARCHAR(50),
BANK_BRANCH_NAME VARCHAR(100),
IFSC_CODE VARCHAR(15),
BANK_BRANCH_ADDRESS VARCHAR(500),
ACCOUNT_NO VARCHAR(25),
CREATED_DATE DATE,
MODIFIED_DATE DATE,
CREATED_BY VARCHAR(20),
MODIFIED_BY VARCHAR(20),
APD_CODE VARCHAR(8),
CFMS_BENF_CODE VARCHAR(20)
);
CREATE EXTERNAL TABLE IF NOT EXISTS pisprd_raw.DWMA_ACCTD_CLAIMS 
(TRANSACTION_ID CHAR(13),
CLAIMANT_NAME VARCHAR(150),
CLAIM_DATE DATE,
APPROVAL_DATE DATE,
PAY_DATE DATE,
AMOUNT NUMBER(18,4),
CLAIM_REMARKS VARCHAR(500),
BILL_NO VARCHAR(200),
BILL_DATE DATE,
APPROVER_ID CHAR(8),
A_REMARKS VARCHAR(500),
HOA_ID CHAR(2),
CLASS_ID CHAR(2),
BANK_ID CHAR(8),
CHEQUE_NO CHAR(6),
CHEQUE_DATE DATE,
STATUS VARCHAR(15),
CREATED_DATE DATE,
PROC_NO VARCHAR(200),
PCC_INFO_CODE VARCHAR(9),
TDS NUMBER(18,4),
VENDOR_NAME VARCHAR(150),
SALARY_ID CHAR(13),
FTR_GENERATED CHAR(1),
FTR_GENERATED_DATE DATE,
PAYORDER_NO VARCHAR(15),
CLAIMANT_ID VARCHAR(100),
MONTH_NO VARCHAR(2),
YEAR VARCHAR(4),
FUND_CODE VARCHAR(2),
BATCH_ID VARCHAR(20),
CLUSTER_ID VARCHAR(5),
MANDAL_ID VARCHAR(5),
MEGA_CODE VARCHAR(5),
PANCHAYAT_ID VARCHAR(5),
MICRO_CODE VARCHAR(5),
NO_OF_CAMPS NUMBER,
TRAINING_ID CHAR(13),
VEH_OWN_TYPE VARCHAR(20),
PROC_DATE DATE,
MODIFIED_DATE DATE,
CREATED_BY VARCHAR(20),
MODIFIED_BY VARCHAR(20),
UNIT_ID VARCHAR(2),
UG_ID VARCHAR(20),
INST_HOAID VARCHAR(2),
EPF_ADMIN_AMT NUMBER,
UNIT_COST NUMBER
);
CREATE EXTERNAL TABLE IF NOT EXISTS pisprd_raw.WCC_HORTI_FARMER_REGISTRATION 
(HORTI_APPLICATION_NO VARCHAR(20),
MGNREGS_ESTIMATE_NO VARCHAR(30),
JOBCARD_NO VARCHAR(25),
FARMER_NAME VARCHAR(500),
FATHER_NAME VARCHAR(500),
SOCIAL_CATEGORY VARCHAR(10),
AADHAR_NO VARCHAR(12),
MOBILE_NO VARCHAR(10),
PASSBOOK_NO VARCHAR(2500),
KHATA_NO VARCHAR(2500),
TOTAL_NO_OF_ACRES VARCHAR(500),
MEGA_CODE VARCHAR(4),
MICRO_CODE VARCHAR(4),
PCC_INFO_CODE VARCHAR(9),
MANDAL_ID VARCHAR(50),
GP_ID VARCHAR(50),
VILLAGE_ID VARCHAR(50),
HABITATION_ID VARCHAR(50),
STATUS VARCHAR(2),
TOTAL_AMOUNT VARCHAR(100),
CREATED_DATE DATE,
CREATED_BY VARCHAR(20),
MODIFIED_DATE DATE,
MODIFIED_BY VARCHAR(20),
PO_APPROVAL_DATE DATE,
APD_APPROVAL_DATE DATE,
PD_APPROVAL_DATE DATE,
ADMIN_SANCTION_DATE DATE,
ADMIN_SANCTION_NO VARCHAR(2000),
ADMIN_SANCTION_FNAME VARCHAR(2000),
REJECTION_REASON VARCHAR(2000),
WORK_FILE NUMBER DEFAULT 100,
TOTAL_NO_OF_PLANTS VARCHAR(50),
HOA_ID VARCHAR(2) DEFAULT 13,
GENDER VARCHAR(10),
CROP_NAME VARCHAR(500),
SANCTION_REQUIRED_NO VARCHAR(100),
ACTUAL_NO_OF_ACRES VARCHAR(100),
ACTUAL_NO_OF_PLANTS VARCHAR(500),
ACTUAL_TOTAL_AMOUNT NUMBER
);
CREATE EXTERNAL TABLE IF NOT EXISTS pisprd_raw.WCC_VILLAGE_MASTER 
(STATE_CODE CHAR(2),
DISTRICT_CODE CHAR(2),
MANDAL_CODE CHAR(2),
VILLAGE_CODE CHAR(3),
VILLAGE_NAME VARCHAR(100),
PANCHAYAT_CODE CHAR(2),
IS_UNDERCLUSTER CHAR(1),
CREATED_DATE DATE,
CREATED_BY VARCHAR(20),
MODIFIED_DATE DATE,
MODIFIED_BY VARCHAR(20)
);
CREATE EXTERNAL TABLE IF NOT EXISTS pisprd_raw.WCC_ACCT_MATERIALS 
(TRANSACTION_DATE DATE,
TRANSACTION_ID CHAR(13),
WORK_CODE VARCHAR(18),
AMOUNT NUMBER,
SUPPLIER_CODE VARCHAR(20),
CHEQUE_NO CHAR(6),
CHEQUE_DATE DATE,
SRC_ID CHAR(8),
PCC_INFO_CODE VARCHAR(9),
FTR_GENERATED CHAR(1),
FINO_PAYORDER CHAR(1),
PO_NUMBER VARCHAR(50),
FUNDSALC_ID CHAR(13),
WITHHELD_AMOUNT NUMBER,
SPECIALDEDUCTION_AMOUNT NUMBER,
WITHHELD_REASON VARCHAR(200),
ORG_MATERIAL_TRANSACTION_ID CHAR(13),
VAT_AMOUNT NUMBER,
QC_AMOUNT NUMBER,
SAND_SCHARGES NUMBER,
GRAVEL_SCHARGES NUMBER,
STONE_SCHARGES NUMBER,
METAL_SCHARGES NUMBER,
CREATED_DATE DATE,
CREATED_BY VARCHAR(20),
MODIFIED_DATE DATE,
MODIFIED_BY VARCHAR(20),
ADMIN_COMP_AMOUNT NUMBER,
ADMIN_FLAG CHAR(1)
);
CREATE EXTERNAL TABLE IF NOT EXISTS pisprd_raw.WCC_HORTI_FARMER_INVOICE_DET 
(HORTI_APPLICATION_NO VARCHAR(20),
MGNREGS_ESTIMATE_NO VARCHAR(30),
JOBCARD_NO VARCHAR(25),
FARMER_NAME VARCHAR(500),
AADHAR_NO VARCHAR(12),
MEGA_CODE VARCHAR(4),
MICRO_CODE VARCHAR(4),
PCC_INFO_CODE VARCHAR(9),
MANDAL_ID VARCHAR(50),
GP_ID VARCHAR(50),
VILLAGE_ID VARCHAR(50),
HABITATION_ID VARCHAR(50),
INVOICE_PO_STATUS VARCHAR(20),
INVOICE_NO VARCHAR(500),
FARMER_PHOTO_PATH VARCHAR(500),
INVOICE_PATH VARCHAR(500),
REJECTED_REASON VARCHAR(500),
CREATED_DATE DATE,
CREATED_BY VARCHAR(20),
MODIFIED_DATE DATE,
MODIFIED_BY VARCHAR(20),
HORTI_FTO_NO VARCHAR(20),
HORTI_VOUCHER_NO VARCHAR(20),
WORKFILE_FTO_NO VARCHAR(20),
WORKFILE_VOUCHER_NO VARCHAR(20),
FTR_GEN_DATE DATE
);
CREATE EXTERNAL TABLE IF NOT EXISTS pisprd_raw.APREGS_USER.PROJECT_GENERATED_PD_R2 
(DID VARCHAR(2000),
DISTRICT_NAME VARCHAR(2000),
FINANCIAL_YEAR VARCHAR(2000),
APR_PROJECTED_PD NUMBER,
APR_GENERATED_PD NUMBER,
MAY_PROJECTED_PD NUMBER,
MAY_GENERATED_PD NUMBER,
JUN_PROJECTED_PD NUMBER,
JUN_GENERATED_PD NUMBER,
JUL_PROJECTED_PD NUMBER,
JUL_GENERATED_PD NUMBER,
AUG_PROJECTED_PD NUMBER,
AUG_GENERATED_PD NUMBER,
SEP_PROJECTED_PD NUMBER,
SEP_GENERATED_PD NUMBER,
OCT_PROJECTED_PD NUMBER,
OCT_GENERATED_PD NUMBER,
NOV_PROJECTED_PD NUMBER,
NOV_GENERATED_PD NUMBER,
DEC_PROJECTED_PD NUMBER,
DEC_GENERATED_PD NUMBER,
JAN_PROJECTED_PD NUMBER,
JAN_GENERATED_PD NUMBER,
FEB_PROJECTED_PD NUMBER,
FEB_GENERATED_PD NUMBER,
MAR_PROJECTED_PD NUMBER,
MAR_GENERATED_PD NUMBER,
CREATED_DATE DATE,
CREATED_BY VARCHAR(2000),
MODIFIED_DATE DATE,
MODIFIED_BY VARCHAR(2000)
);
CREATE EXTERNAL TABLE IF NOT EXISTS pisprd_raw.APREGS_USER.PANCHAYAT_MASTER_NEW 
(DISTRICT_ID VARCHAR(2),
DISTRICT_NAME VARCHAR(150),
MANDAL_ID VARCHAR(2),
MANDAL_NAME VARCHAR(150),
CLUSTER_ID VARCHAR(2),
CLUSTER_NAME VARCHAR(150),
ASSEMBLY_ID VARCHAR(3),
ASSEMBLY_NAME VARCHAR(150),
PANCHAYAT_CODE VARCHAR(2),
PANCHAYAT_NAME VARCHAR(150),
PCC_INFO_CODE VARCHAR(9),
DISTRICT_ID_OLD VARCHAR(2),
MANDAL_ID_OLD VARCHAR(2),
PANCHAYAT_ID_OLD VARCHAR(2),
IS_DROUGHT_MANDAL VARCHAR(2),
DISTRICT_NAME_OLD VARCHAR(150),
MANDAL_NAME_OLD VARCHAR(150),
PANCHAYAT_NAME_OLD VARCHAR(150),
DISTRICT_ID_HRMS VARCHAR(2),
DISTRICT_NAME_HRMS VARCHAR(150),
MANDAL_ID_HRMS VARCHAR(2),
MANDAL_NAME_HRMS VARCHAR(150),
NIC_BLOCK_CODE VARCHAR(10),
DISTRICT_ID_NIC VARCHAR(4),
MANDAL_ID_NIC VARCHAR(7),
PANCHAYAT_ID_NIC VARCHAR(10),
IS_ACTIVE VARCHAR(1),
MANDAL_TYPE VARCHAR(2000),
IS_ITDA VARCHAR(2000),
DISTRICT_NAME_TEL VARCHAR(2000),
MANDAL_NAME_TEL VARCHAR(2000),
PANCHAYAT_NAME_TEL VARCHAR(2000),
AMRIT_SAROVARS NUMBER,
FISH_PONDS NUMBER,
FIELD_FEDDER_CHANNEL NUMBER,
CANAL_LINE_PLANTATION NUMBER,
GOKULAMS NUMBER,
FARM_POND NUMBER,
RING_BOUNDARY_TRENCHES NUMBER,
BENCH_TERRACING NUMBER
);
CREATE EXTERNAL TABLE IF NOT EXISTS pisprd_raw.WCC_ACCT_FUNDS 
(TRANSACTION_DATE DATE,
TRANSACTION_ID CHAR(13),
ORDER_NO VARCHAR(30),
ORDER_DATE DATE,
FROM_CHEQUE_NO VARCHAR(10),
FROM_CHEQUE_DATE DATE,
TO_CHEQUE_NO VARCHAR(10),
TO_CHEQUE_DATE DATE,
TO_SRC_ID CHAR(8),
COMMITTED NUMBER,
CREDIT NUMBER,
DEBIT NUMBER,
BALANCE NUMBER,
REMARKS VARCHAR(500),
ORDER_REMARKS VARCHAR(500),
PCC_INFO_CODE VARCHAR(9),
IN_FAVOR_OF VARCHAR(100),
CREATED_DATE DATE,
CREATED_BY VARCHAR(20),
MODIFIED_DATE DATE,
MODIFIED_BY VARCHAR(20),
HOA_ID VARCHAR(2),
CLASS_ID VARCHAR(2)
);
CREATE EXTERNAL TABLE IF NOT EXISTS pisprd_raw.APREGS_USER.ACCT_MATE_SALARIES_NEW 
(APPROVER_CODE VARCHAR(12),
YEAR VARCHAR(4),
MONTH VARCHAR(2),
AMOUNT NUMBER,
PANCHAYAT_CODE CHAR(2 CHAR),
STATUS VARCHAR(25),
CREATED_DATE DATE,
CREATED_BY VARCHAR(7),
SRC_ID CHAR(8 CHAR),
PCC_INFO_CODE VARCHAR(9),
FA_JOBCARD_ID VARCHAR(30),
ALLOWANCES_TA NUMBER,
ALLOWANCES_PH NUMBER,
INCENTIVES NUMBER,
DEDUCTIONS NUMBER,
MOBILEBILL NUMBER,
CUG_ALLOWANCE NUMBER,
MODIFIED_DATE DATE,
MODIFIED_BY VARCHAR(7),
WORKED_PERSONDAYS NUMBER,
SOCIALAUDIT_AMT VARCHAR(5),
IS_COURTCASE_FA VARCHAR(1),
OMS_DEDUCTIONS NUMBER,
DEMAND_DEDUCTIONS NUMBER,
BASIC_SALARY NUMBER,
FOOD_EXPENSE NUMBER,
ARREARS NUMBER,
MOBILE_DEDUCTIONS VARCHAR(10),
PERSONDAYS VARCHAR(10),
PHOTOCOPYING_CHARGES VARCHAR(5),
MEETINGS_ATTENDED VARCHAR(2),
MOBILE_LOAN_RECOVERY_1718 NUMBER,
KERALA_DEDUCTION NUMBER,
COVID_DEDUCTION NUMBER,
TEN_PER_DEDUCTION NUMBER
);
CREATE EXTERNAL TABLE IF NOT EXISTS pisprd_raw.APREGS_USER.EMPLOYMENT_GENERATED_DETAILS 
(DISTRICT_NAME VARCHAR(2000),
MANDAL_NAME VARCHAR(2000),
PANCHAYAT_NAME VARCHAR(2000),
HHI_SC NUMBER,
HHI_ST NUMBER,
HHI_O NUMBER,
HHI_TOTAL NUMBER,
HHPE_SC NUMBER,
HHPE_ST NUMBER,
HHPE_O NUMBER,
HHPE_TOTAL NUMBER,
HHPE_WOMEN NUMBER,
PG_SC NUMBER,
PG_ST NUMBER,
PG_O NUMBER,
PG_TOTAL NUMBER,
PG_WOMEN NUMBER,
SC_100 NUMBER,
ST_100 NUMBER,
OTHERS_100 NUMBER,
TOTAL_100 NUMBER,
DID VARCHAR(10),
MID VARCHAR(10),
CREATED_DATE DATE,
CREATED_BY VARCHAR(2000),
MODIFIED_DATE DATE,
MODIFIED_BY VARCHAR(2000),
FINANCIAL_YEAR VARCHAR(2000),
DID_NEW VARCHAR(2000),
MID_NEW VARCHAR(2000),
PID VARCHAR(2),
WEMP_SC NUMBER,
WEMP_ST NUMBER,
WEMP_O NUMBER,
WEMP_TOTAL NUMBER
);
CREATE EXTERNAL TABLE IF NOT EXISTS pisprd_raw.WCC_HORTI_FARMER_LAND_DET 
(FARMER_NAME VARCHAR(500),
FATHER_NAME VARCHAR(500),
SOCIAL_CATEGORY VARCHAR(10),
AADHAR_NO VARCHAR(12),
MOBILE_NO VARCHAR(10),
PASSBOOK_NO VARCHAR(50),
KHATA_NO VARCHAR(50),
SURVEY_NO VARCHAR(50),
NO_OF_ACRES VARCHAR(50),
MEGA_CODE VARCHAR(4),
MICRO_CODE VARCHAR(4),
PCC_INFO_CODE VARCHAR(9),
MANDAL_ID VARCHAR(50),
GP_ID VARCHAR(50),
VILLAGE_ID VARCHAR(50),
HABITATION_ID VARCHAR(50),
APPLICATION_UPLOAD VARCHAR(500),
PASSBOOK_UPLOAD VARCHAR(500),
STATUS VARCHAR(2),
CREATED_DATE DATE,
CREATED_BY VARCHAR(20),
MODIFIED_DATE DATE,
MODIFIED_BY VARCHAR(20),
CROP_NAME VARCHAR(100),
NO_OF_PLANTS VARCHAR(100),
TOTAL_AMOUNT VARCHAR(100),
JOBCARD_NO VARCHAR(25),
NURSURY_ID VARCHAR(5),
NURSERY_NAME VARCHAR(500),
MGNREGS_ESTIMATE_NO VARCHAR(30),
HORTI_APPLICATION_NO VARCHAR(20),
ADANGAL_UPLOAD VARCHAR(500),
GENDER VARCHAR(10),
CROP_ID VARCHAR(5)
);
CREATE EXTERNAL TABLE IF NOT EXISTS pisprd_raw.WCC_HORTI_NURSERY_MASTER 
(CROP_ID VARCHAR(5),
CROP_NAME VARCHAR(500),
NURSERY_ID VARCHAR(10),
NURSERY_NAME VARCHAR(1000),
STATUS VARCHAR(2),
CREATED_DATE DATE,
CREATED_BY VARCHAR(20),
MODIFIED_DATE DATE,
MODIFIED_BY VARCHAR(20),
COST_PER_PLANT VARCHAR(20),
PLANTS_PER_ACRE VARCHAR(20),
AVAILABLE_PLANTS NUMBER
);
CREATE EXTERNAL TABLE IF NOT EXISTS pisprd_raw.WCC_SUPPLIER_INFO 
(SUPPLIER_CODE VARCHAR(20),
SUPPLIER_NAME VARCHAR(150),
TYPE_OF_AGENCY VARCHAR(25),
PAYING_AGENCY_NAME VARCHAR(150),
ACCOUNTNO VARCHAR(20),
SUPPLIER_ADDRESS VARCHAR(250),
SUPPLIER_PHONE_OFFICE VARCHAR(11),
SUPPLIER_MOBILE VARCHAR(12),
GOVT_REG_NO VARCHAR(20),
IS_ACTIVE CHAR(1),
VALID_FROM DATE,
VALID_UPTO DATE,
PCC_INFO_CODE VARCHAR(9),
MANDAL_CODE CHAR(2),
IFSC_CODE VARCHAR(11),
POSTOFFICE_ADDRESS VARCHAR(50),
MANDAL_ADDRESS VARCHAR(100),
PINCODE_ADDRESS VARCHAR(6),
DESIGNATION VARCHAR(50),
PANCHAYAT_CODE VARCHAR(2),
CREATED_DATE DATE,
CREATED_BY VARCHAR(20),
MODIFIED_DATE DATE,
MODIFIED_BY VARCHAR(20),
FARMER_ID VARCHAR(20)
);
CREATE EXTERNAL TABLE IF NOT EXISTS pisprd_raw.WCC_WORKPROGRESS_MATERIALS 
(WORK_PROGRESS_CODE NUMBER,
ITEM_NAME VARCHAR(500),
WORK_CODE VARCHAR(18),
RATE NUMBER,
QTY_SUPPLIED NUMBER,
UNITS VARCHAR(50),
AMOUNT NUMBER,
SUPPLIER_CODE VARCHAR(20),
BILL_NO VARCHAR(20),
PAID_STATUS CHAR(1),
PCC_INFO_CODE VARCHAR(9),
AGENCY_NAME VARCHAR(150),
ACCOUNT_NO VARCHAR(50),
ID NUMBER,
MATERIAL_TRANSACTION_ID VARCHAR(50),
TRACTOR_NO VARCHAR(10),
PO_NUMBER VARCHAR(50),
MB_NO VARCHAR(10),
MB_PAGE_FROM NUMBER,
MB_PAGE_TO NUMBER,
AGENCY_TYPE VARCHAR(50),
IS_DISBURSED CHAR(1),
MB_ISSUING_YEAR VARCHAR(4),
PAY_FROMDATE DATE,
PAY_TODATE DATE,
TASK_TYPE VARCHAR(20),
CREATED_DATE DATE,
CREATED_BY VARCHAR(20),
MODIFIED_DATE DATE,
MODIFIED_BY VARCHAR(20),
MATERIAL_CODE NUMBER,
BILL_DATE DATE,
SURVIVAL_DATE DATE,
PAYMENT_DATE DATE,
IS_NOMINEE CHAR(1),
NOMINEE_ACCNT VARCHAR(50),
NOMINEE_NAME VARCHAR(100),
NOMINEE_JOBCARD VARCHAR(20),
NOMINEE_IFSCCODE VARCHAR(20),
NOMINEE_BANK VARCHAR(50),
INPUT_RMT VARCHAR(50),
INPUT_EXTENT VARCHAR(50),
IS_BANK_PAYMENT VARCHAR(1),
AADHAR_ID VARCHAR(12),
WITHHOLDINGTRANSACTION_ID VARCHAR(50),
SOCIALAUDIT_DEDUCTION NUMBER,
SOCIALAUDIT_FLAG VARCHAR(1),
LAST_PAYMENT_DONE VARCHAR(1),
LEAD_ID NUMBER,
INPUT_LENGTH VARCHAR(50),
NIC_FLAG VARCHAR(1),
NIC_SENT_DATE DATE,
SOCIALAUDIT_TRANSACTIONID VARCHAR(13),
RECOVERY_TRANSACTIONID VARCHAR(13),
SOCIALAUDIT_FTOGENERATED VARCHAR(1)
);
CREATE EXTERNAL TABLE IF NOT EXISTS pisprd_raw.WCC_WORK_INFO_INPUT_DETAILS 
(WORK_CODE VARCHAR(18),
INPUT_VALUE VARCHAR(2000),
INPUT_NAME VARCHAR(50),
UNIT_OF_MEASUREMENT VARCHAR(20),
PCC_INFO_CODE VARCHAR(9),
FARMER_ID VARCHAR(22),
CREATED_DATE DATE,
CREATED_BY VARCHAR(20),
MODIFIED_DATE DATE,
MODIFIED_BY VARCHAR(20)
);
CREATE EXTERNAL TABLE IF NOT EXISTS pisprd_raw.WCC_WORK_MATERIALS 
(WORK_CODE VARCHAR(18),
ITEM_NAME VARCHAR(500),
ITEM_TYPE VARCHAR(30),
UOM VARCHAR(50),
QTY NUMBER,
RATE NUMBER,
AMOUNT NUMBER,
PCC_INFO_CODE VARCHAR(9),
WORK_YEAR NUMBER,
IS_BENEFICIARY_TASK CHAR(1),
CREATED_DATE DATE,
CREATED_BY VARCHAR(20),
MODIFIED_DATE DATE,
MODIFIED_BY VARCHAR(20),
TASK_CODE VARCHAR(10),
MATERIAL_CODE VARCHAR(10)
);
CREATE EXTERNAL TABLE IF NOT EXISTS pisprd_raw.WCC_WORK_REGISTRATION 
(WORK_CODE VARCHAR(18),
WORK_CATEGORY_CODE CHAR(2),
WORK_TYPE_CODE VARCHAR(5),
WORK_NAME VARCHAR(200),
WORK_NAME_TELUGU VARCHAR(200),
WORK_DESCRIPTION VARCHAR(300),
WORK_DESCRIPTION_TELUGU VARCHAR(300),
STATUS_CODE NUMBER,
FARMER_NAME VARCHAR(1000),
SURVEY_NUMBER VARCHAR(1000),
PRIORITY_NUMBER NUMBER,
TECHNICAL_APPROVER_CODE VARCHAR(12),
ADMINISTRATIVE_APPROVER_CODE VARCHAR(12),
TECHNICAL_APPROVED_DATE DATE,
ADMINISTRATIVE_APPROVED_DATE DATE,
PROPOSER_CODE NUMBER,
WORK_EXEC_AGENCY_CODE NUMBER,
PLANNED_START_DATE DATE,
DURATION NUMBER,
ACTUAL_START_DATE DATE,
ACTUAL_END_DATE DATE,
TOTAL_COST NUMBER,
TOTAL_MANDAYS NUMBER,
INTIMATIONLETTER_REFNO VARCHAR(100),
INTIMATIONLETTER_DATE DATE,
PCC_INFO_CODE VARCHAR(9),
GPS_LONGITUDE VARCHAR(20),
GPS_LATITUDE VARCHAR(20),
OFFICIAL_NAME VARCHAR(50),
OFFICIAL_DESIGNATION VARCHAR(100),
HABITATION_CODE CHAR(2),
HABITATION_NAME VARCHAR(100),
ORIGINAL_PROJECT_COST NUMBER,
LOCATION VARCHAR(100),
LOCATION_TELUGU VARCHAR(100),
COMPLETION_DATE DATE,
PROGRAM_CODE CHAR(2),
SECTOR_CODE CHAR(1),
WS_CLDP_CODE CHAR(4),
LAND_OWNERSHIP CHAR(1),
NO_OF_REESTIMATIONS NUMBER,
PROJECT_ID CHAR(2),
VERSION VARCHAR(100),
AMOUNT_UNSKILLED NUMBER,
AMOUNT_SKILLED NUMBER,
AMOUNT_MATERIAL NUMBER,
WORK_COMPLETION_PERCENTAGE NUMBER,
WORK_COMPLETION_PERCENT_DATE DATE,
VSS_NAME VARCHAR(100),
FOREST_BLOCK_NAME VARCHAR(100),
PR_WEM_CODE VARCHAR(12),
WSA_CODE VARCHAR(7),
MEGA_CODE VARCHAR(30),
MICRO_CODE VARCHAR(30),
FINANCIAL_YEAR VARCHAR(30),
WS_SCHEME_TYPE VARCHAR(30),
PROPOSED_YEAR VARCHAR(10),
FUNDED_BY VARCHAR(500),
NURSERY_CODE VARCHAR(4),
CREATED_DATE DATE,
CREATED_BY VARCHAR(20),
MODIFIED_DATE DATE,
MODIFIED_BY VARCHAR(20),
IS_WDF_WORK CHAR(1),
REMARKS VARCHAR(4000),
GPS_STATUS VARCHAR(2),
FILE_NAME VARCHAR(25),
GOI_WORK_CODE VARCHAR(30),
GOI_PHOTO_STAGE NUMBER,
GOI_ASSET_ID VARCHAR(20),
ADMIN_SANC_TO_NIC VARCHAR(1),
PD_REMARKS VARCHAR(4000),
AMOUNT_UNSKILLED_ACTUAL NUMBER,
AMOUNT_SKILLED_ACTUAL NUMBER,
AMOUNT_MATERIAL_ACTUAL NUMBER,
TOTAL_COST_ACTUAL NUMBER,
STATUS_ADJUSTED CHAR(1),
ADMIN_SANC_TO_NIC_DT DATE,
FILE_UPLOAD_PATH1 VARCHAR(2000),
FILE_UPLOAD_PATH2 VARCHAR(2000),
FILE_UPLOAD_STATUS VARCHAR(2000),
DOLR_WORK_CODE VARCHAR(2000)
);
CREATE EXTERNAL TABLE IF NOT EXISTS pisprd_raw.WCC_WORK_TASKS 
(WORK_CODE VARCHAR(18),
TASK_CODE VARCHAR(5),
TASK_QTY NUMBER,
UNITS VARCHAR(30),
AMOUNT_UNSKILLED NUMBER,
AMOUNT_SKILLED NUMBER,
AMOUNT_MATERIAL NUMBER,
MANDAYS NUMBER,
TASK_KEY NUMBER,
PCC_INFO_CODE VARCHAR(9),
RATE NUMBER,
RATE_SKILLED NUMBER,
PROGRESS_REQUIRED CHAR(1),
NEWTASK_REVISEDESTIMATE CHAR(1),
YEAR_WISE_TASK NUMBER,
WORK_YEAR NUMBER,
IS_BENEFICIARY_TASK CHAR(1),
CREATED_DATE DATE,
CREATED_BY VARCHAR(20),
MODIFIED_DATE DATE,
MODIFIED_BY VARCHAR(20),
AMOUNT_ADJUSTED NUMBER
);
CREATE EXTERNAL TABLE IF NOT EXISTS pisprd_raw.PSI_BENEFICIARY_APPLICATIONS 
(APPLICATION_NO VARCHAR(30),
AADHAAR_ID VARCHAR(12),
PCC_INFO_CODE VARCHAR(20),
MEGA_CODE VARCHAR(4),
MICRO_CODE VARCHAR(4),
LOCATION_CODE VARCHAR(20),
FARMER_NAME VARCHAR(2000),
FATHER_NAME VARCHAR(2000),
CASTE VARCHAR(200),
GENDER VARCHAR(200) DEFAULT 'M',
MOBILE_NO VARCHAR(10),
PATTA_NO VARCHAR(200),
SURVEY_NO VARCHAR(200),
CROP_DETAILS VARCHAR(2000),
FARMER_CATEGORY VARCHAR(200),
WET_EXTENT NUMBER,
DRY_EXTENT NUMBER,
TOTAL_EXTENT NUMBER,
CREATED_DATE DATE,
CREATED_BY VARCHAR(2000),
MODIFIED_DATE DATE,
MODIFIED_BY VARCHAR(2000),
STATUS CHAR(1),
REJECTION_REASON VARCHAR(2000),
PO_APPROVAL_DATE DATE,
APD_APPROVAL_DATE DATE,
PD_APPROVAL_DATE DATE,
ADMIN_SANCTION_DATE DATE,
ADMIN_SANCTION_NO VARCHAR(2000),
ADMIN_SANCTION_FNAME VARCHAR(2000)
);
CREATE EXTERNAL TABLE IF NOT EXISTS pisprd_raw.PSI_APPLICATION_IMPLEMENTS 
(APPLICATION_NO VARCHAR(30),
AADHAAR_ID VARCHAR(12),
PCC_INFO_CODE VARCHAR(20),
ACTIVITY_ID VARCHAR(20),
ACTIVITY_NAME VARCHAR(2000),
IMPLEMENT_ID VARCHAR(20),
IMPLEMENT_NAME VARCHAR(2000),
NO_OF_UNITS NUMBER,
UNIT_COST NUMBER,
BENF_CONT NUMBER,
WDFPMKSY_CONT NUMBER,
TOTAL_AMOUNT NUMBER,
CREATED_DATE DATE,
CREATED_BY VARCHAR(2000),
MODIFIED_DATE DATE,
MODIFIED_BY VARCHAR(2000),
MANUFACTURER_ID VARCHAR(50),
MANUFACTURER_NAME VARCHAR(2000),
IS_BENF_WILLING_PAY VARCHAR(50)
);
CREATE EXTERNAL TABLE IF NOT EXISTS pisprd_raw.APREGS_USER.DYNAMIC_REPORTDETAILS_R813 
(DID VARCHAR(2),
DISTRICT_NAME VARCHAR(150),
MID VARCHAR(2),
MANDAL_NAME VARCHAR(150),
PID VARCHAR(2),
PANCHAYAT_NAME VARCHAR(150),
TOTAL_EXP NUMBER,
ALLIED_EXP NUMBER,
FIN_YEAR VARCHAR(10),
CREATED_DATE DATE,
CREATED_BY VARCHAR(250),
MODIFIED_DATE DATE,
MODIFIED_BY VARCHAR(250)
);
CREATE EXTERNAL TABLE IF NOT EXISTS pisprd_raw.APREGS_USER.EMPLOYMENT_PROVIDED_DURING_FY 
(DID VARCHAR(2),
DISTRICT_NAME VARCHAR(2000),
MID VARCHAR(2),
MANDAL_NAME VARCHAR(2000),
PANCHAYAT_NAME VARCHAR(2000),
FINANCIAL_YEAR VARCHAR(200),
APR_HH NUMBER,
APR_PD NUMBER,
MAY_HH NUMBER,
MAY_PD NUMBER,
JUN_HH NUMBER,
JUN_PD NUMBER,
JUL_HH NUMBER,
JUL_PD NUMBER,
AUG_HH NUMBER,
AUG_PD NUMBER,
SEP_HH NUMBER,
SEP_PD NUMBER,
OCT_HH NUMBER,
OCT_PD NUMBER,
NOV_HH NUMBER,
NOV_PD NUMBER,
DEC_HH NUMBER,
DEC_PD NUMBER,
JAN_HH NUMBER,
JAN_PD NUMBER,
FEB_HH NUMBER,
FEB_PD NUMBER,
MAR_HH NUMBER,
MAR_PD NUMBER,
CREATED_DATE DATE,
CREATED_BY VARCHAR(2000),
MODIFIED_DATE DATE,
MODIFIED_BY VARCHAR(2000),
PID VARCHAR(10)
);
CREATE EXTERNAL TABLE IF NOT EXISTS pisprd_raw.APREGS_USER.DYNAMIC_REPORTDETAILS_R712 
(PANCHAYAT_NAME VARCHAR(500),
WAGE_CURRENT FLOAT(126),
WAGE_PREVIOUS FLOAT(126),
MAT_CURRENT FLOAT(126),
MAT_PREVIOUS FLOAT(126),
ADMIN_CURRENT FLOAT(126),
ADMIN_PREVIOUS FLOAT(126),
CURRENT_TOTAL FLOAT(126),
PREVIOUS_TOTAL FLOAT(126),
G_TOTAL FLOAT(126),
EE_HH FLOAT(126),
EE_PER FLOAT(126),
EE_PDS FLOAT(126),
AVG_EMP_HH FLOAT(126),
AVG_EMP_PDS FLOAT(126),
WORK_COMPLETED FLOAT(126),
WORK_PROGRESS FLOAT(126),
COST_PDS FLOAT(126),
DISTRICT_ID VARCHAR(500),
MANDAL_ID VARCHAR(500),
CREATED_DATE DATE,
CREATED_BY VARCHAR(500),
MODIFIED_DATE DATE,
MODIFIED_BY VARCHAR(250),
FINANCIAL_YEAR VARCHAR(250),
PID VARCHAR(2),
DISTRICT_NAME VARCHAR(500),
MANDAL_NAME VARCHAR(500)
);
CREATE EXTERNAL TABLE IF NOT EXISTS pisprd_raw.WCC_ACCT_FTR_DETAILS 
(FTR_NO CHAR(13),
FTR_DATE DATE,
CHEQUE_ORDER_NO CHAR(6),
ACCOUNT_NO VARCHAR(100),
BANK_NAME VARCHAR(500),
IFSC_CODE CHAR(11),
IN_FAVOUR_OF VARCHAR(500),
AMOUNT NUMBER,
BENEFICIARY_ADDRESS VARCHAR(200),
PAYMENT_TYPE CHAR(1),
PAYING_AGENCY_TYPE CHAR(1),
CAT_ID NUMBER,
NO_OF_LABOUR NUMBER,
MCC_UPLOAD_STATUS CHAR(1),
GEN_DATE DATE,
PCC_INFO_CODE VARCHAR(9),
VO_NAME VARCHAR(100),
VO_ACCOUNT_NO VARCHAR(50),
VO_GB_NAME VARCHAR(100),
BENEFICIARY_EMAIL VARCHAR(100),
UPLOAD_DATE DATE,
CREATED_DATE DATE,
CREATED_BY VARCHAR(20),
MODIFIED_DATE DATE,
MODIFIED_BY VARCHAR(20),
UPLOAD CHAR(1),
FIRSTUPLOAD_DATE DATE,
STATUS VARCHAR(1),
PROCESSED_DATE DATE,
AFD_DELAY_FLAG VARCHAR(1),
AFD_DELAY_PROCESS_DATE DATE,
UPLOAD_EMPID VARCHAR(20),
CO_EMPID VARCHAR(20),
PO_UPLOAD_DATE DATE,
APD_UPLOAD_DATE DATE,
PD_UPLOAD_DATE DATE,
DEDUCTION_AMOUNT NUMBER,
DEDUCTION_REMARKS VARCHAR(500),
VENDOR_ID VARCHAR(20)
);
CREATE EXTERNAL TABLE IF NOT EXISTS pisprd_raw.DWMA_ACCTD_FTR_DETAILS 
(FTR_NO CHAR(13),
FTR_DATE DATE,
CHEQUE_ORDER_NO CHAR(6),
ACCOUNT_NO VARCHAR(100),
BANK_NAME VARCHAR(500),
IFSC_CODE CHAR(11),
IN_FAVOUR_OF VARCHAR(500),
AMOUNT NUMBER(18,4),
BENEFICIARY_ADDRESS VARCHAR(200),
PAYMENT_TYPE CHAR(1),
PAYING_AGENCY_TYPE CHAR(1),
CAT_ID NUMBER,
NO_OF_LABOUR NUMBER,
MCC_UPLOAD_STATUS CHAR(1),
GEN_DATE DATE,
PCC_INFO_CODE VARCHAR(9),
VO_NAME VARCHAR(100),
VO_ACCOUNT_NO VARCHAR(50),
VO_GB_NAME VARCHAR(100),
BENEFICIARY_EMAIL VARCHAR(100),
UPLOAD_DATE DATE,
IS_REJECTED CHAR(2),
CREATED_DATE DATE,
MODIFIED_DATE DATE,
CREATED_BY VARCHAR(20),
MODIFIED_BY VARCHAR(20),
UPLOAD CHAR(1),
FIRSTUPLOAD_DATE DATE,
STATUS VARCHAR(1),
PROCESSED_DATE DATE,
AO_APPROVER_ID VARCHAR(8),
AO_REMARKS VARCHAR(500),
AO_APPROVAL_DATE DATE,
PD_APPROVER_ID VARCHAR(8),
PD_REMARKS VARCHAR(500),
PD_APPROVAL_DATE DATE,
VENDOR_ID VARCHAR(20)
);
CREATE EXTERNAL TABLE IF NOT EXISTS pisprd_raw.DWMA_ACCTD_FUNDS 
(TRANSACTION_DATE DATE,
TRANSACTION_ID CHAR(13),
ORDER_NO VARCHAR(30),
ORDER_DATE DATE,
FROM_CHEQUE_NO VARCHAR(10),
FROM_CHEQUE_DATE DATE,
TO_CHEQUE_NO VARCHAR(10),
TO_CHEQUE_DATE DATE,
TO_SRC_ID CHAR(8),
COMMITTED NUMBER(18,4),
CREDIT NUMBER(18,4),
DEBIT NUMBER(18,4),
BALANCE NUMBER(18,4),
REMARKS VARCHAR(500),
ORDER_REMARKS VARCHAR(500),
PCC_INFO_CODE VARCHAR(9),
HOA_ID CHAR(2),
CLASS_ID CHAR(2),
DISTRICT CHAR(2),
MANDAL CHAR(2),
IN_FAVOR_OF VARCHAR(200),
CREATED_DATE DATE,
MODIFIED_DATE DATE,
CREATED_BY VARCHAR(20),
MODIFIED_BY VARCHAR(20)
);
CREATE EXTERNAL TABLE IF NOT EXISTS pisprd_raw.WCC_ACCT_CLAIMS 
(TRANSACTION_ID CHAR(13),
CLAIMANT_NAME VARCHAR(150),
CLAIM_DATE DATE,
APPROVAL_DATE DATE,
PAY_DATE DATE,
AMOUNT NUMBER,
CLAIM_REMARKS VARCHAR(500),
BILL_NO VARCHAR(200),
BILL_DATE DATE,
APPROVER_ID VARCHAR(20),
A_REMARKS VARCHAR(500),
HOA_ID CHAR(2),
CLASS_ID CHAR(2),
BANK_ID CHAR(8),
CHEQUE_NO CHAR(6),
CHEQUE_DATE DATE,
STATUS VARCHAR(20),
PROC_NO VARCHAR(200),
PCC_INFO_CODE VARCHAR(9),
IN_FAVOR_OF VARCHAR(500),
CLAIM_NO VARCHAR(20),
JOBCARD VARCHAR(20),
FINO_PAYORDER CHAR(1),
BO_CODE VARCHAR(3),
SO_CODE VARCHAR(3),
HO_CODE VARCHAR(3),
FTR_GENERATED VARCHAR(1),
PAYORDER_NO VARCHAR(15),
IS_DISBURSED VARCHAR(1),
PA_BANK VARCHAR(100),
PA_ACC_NO VARCHAR(20),
AGENCY_TYPE VARCHAR(25),
FTR_GENERATED_DATE DATE,
CLAIMANT_ID VARCHAR(150),
MONTH_NO CHAR(2),
YEAR CHAR(4),
ACCOUNT_NO VARCHAR(45),
MEGA_CODE VARCHAR(5),
MICRO_CODE VARCHAR(5),
SALARY_ID CHAR(13),
BATCH_ID VARCHAR(50),
MANDAL_ID VARCHAR(50),
PANCHAYAT_CODE VARCHAR(50),
CAMP VARCHAR(20),
AH_PO VARCHAR(20),
DISTRICT_ID VARCHAR(50),
CLUSTER_ID CHAR(2),
VEHICLE_NO VARCHAR(20),
VEHICLE_UTILIZED_BY VARCHAR(50),
TDS NUMBER,
CREATED_DATE DATE,
CREATED_BY VARCHAR(20),
MODIFIED_DATE DATE,
MODIFIED_BY VARCHAR(20),
FUND_CODE VARCHAR(2),
VHC_TYPE CHAR(1),
PROCEEDING_DATE DATE,
MIN_HOA_ID VARCHAR(2),
TRAINING_ID VARCHAR(13),
PROJ_HOA_ID VARCHAR(2),
PE_TOTAL_AMOUNT NUMBER,
DEPT_SUBSIDY NUMBER,
BENEFICIARY_AMOUNT NUMBER,
FY VARCHAR(15),
NO_OF_UNITS NUMBER,
UNIT_ID VARCHAR(2),
QA_TOOL_ID VARCHAR(2),
QA_FIRM_ADDR VARCHAR(250),
BENF_ID NUMBER(10,0),
EPF_ADMIN_AMT NUMBER,
IWMP_RF_AMOUNT NUMBER,
IWMP_SUBSIDY NUMBER,
SUBSIDY_TYPE VARCHAR(10),
PSI_BENF_ID VARCHAR(500),
CLAIM_CATEGORY VARCHAR(10),
PSI_TRANSACTION_ID CHAR(13),
VO_BAL_AMOUNT NUMBER,
PSI_SUBACT_ID VARCHAR(2),
MANUFACTURE_ID VARCHAR(100)
);
CREATE EXTERNAL TABLE IF NOT EXISTS pisprd_raw.WCC_ACCT_HOA_MASTER 
(HOA_ID VARCHAR(2),
HOA_NAME VARCHAR(150),
LEVELTYPE VARCHAR(50),
CREATED_DATE DATE,
CREATED_BY VARCHAR(20),
MODIFIED_DATE DATE,
MODIFIED_BY VARCHAR(20),
ACT_HOA_ID VARCHAR(2)
);
CREATE EXTERNAL TABLE IF NOT EXISTS pisprd_raw.WCC_ACCT_HRMS_SAL_DETAILS 
(DISTRICT_ID CHAR(2),
CLUSTER_ID CHAR(2),
BATCH_ID CHAR(20),
EMPLOYEE_ID VARCHAR(50),
EMPLOYEE_NAME VARCHAR(200),
DESIG_ID CHAR(3),
SALARY_MONTH CHAR(2),
SALARY_YEAR CHAR(4),
SALARY NUMBER,
ARREARS NUMBER,
TOTAL_AMOUNT NUMBER,
ACCOUNT_NO VARCHAR(50),
IFSC_CODE CHAR(11),
BANK_NAME VARCHAR(100),
BANK_BRANCH_NAME VARCHAR(500),
REJECTED CHAR(1),
REJECTED_REASON VARCHAR(200),
IS_PULLED CHAR(1),
STATUS VARCHAR(20),
FTR_NO CHAR(13),
FTR_DATE DATE,
R_REJECTED DATE,
USER_NAME VARCHAR(50),
UPDATED_STATUS CHAR(1),
CLEARED_DATE DATE,
R_DATE DATE,
DOWNLOAD_DATE DATE,
CUG NUMBER,
CELL_DEDUCTION NUMBER,
FTE_IT NUMBER,
FTE_PT NUMBER,
PCC_INFO_CODE VARCHAR(9),
CREATED_DATE DATE,
CREATED_BY VARCHAR(20),
MODIFIED_DATE DATE,
MODIFIED_BY VARCHAR(20),
MEGA_CODE VARCHAR(4),
ENROLLMENT_AMOUNT NUMBER,
FTE_EPF NUMBER,
FTE_LOP NUMBER,
FTE_OD NUMBER,
VA NUMBER,
BCA NUMBER,
FTE_WAGEALLOWANCE NUMBER,
FTE_CONVEYANCE NUMBER,
FTE_TA NUMBER,
TOTAL_GROSS NUMBER,
NEG_EPF NUMBER,
IWMP_BATCH_NO VARCHAR(20),
NEGSAL_DED NUMBER,
PENDING_DED NUMBER,
FTE_SSAAT_AUDIT NUMBER,
PERFORMANCE_DED NUMBER,
PER_ACHIVEMENT NUMBER,
QUARTER_PER_ADDITION NUMBER,
ZERO_PERFORMER VARCHAR(1),
REMARKS VARCHAR(200),
FTE_BASIC NUMBER,
IS_ITDA VARCHAR(1),
SPECIAL_DEDUCTION NUMBER,
NEW_OWN_MOBILE_DED NUMBER,
EPF_PREV_DED NUMBER,
ENHANCED_WAGEALLOWANCE NUMBER
);
CREATE EXTERNAL TABLE IF NOT EXISTS pisprd_raw.WCC_ACCT_SALARIES 
(TRANSACTION_ID CHAR(13),
NAME VARCHAR(100),
GROSS_PAY NUMBER,
DEDUCTIONS NUMBER,
TRANSACTION_DATE DATE,
VOUCHER_NO CHAR(6),
CHEQUE_NO CHAR(6),
SRC_ID CHAR(8),
CHEQUE_DATE DATE,
PCC_INFO_CODE VARCHAR(9),
HOA_ID CHAR(2),
CLASS_ID CHAR(2),
EMP_ID VARCHAR(50),
SAL_MONTH CHAR(2),
SAL_YEAR CHAR(4),
MANDAL_ID VARCHAR(5),
MEGA_CODE VARCHAR(5),
PANCHAYAT_CODE VARCHAR(5),
MICRO_CODE VARCHAR(5),
BATCH_ID VARCHAR(20),
PROC_NO VARCHAR(200),
REMARKS VARCHAR(500),
INCENT_EXPENDITURE NUMBER,
INCENT_MEETINGALLOWANCE NUMBER,
INCENT_MISC_ALLOWANCE NUMBER,
INCENT_MEETING_ABSENTS NUMBER,
INCENT_MEETING_DISCENTIVES NUMBER,
CREATED_DATE DATE,
CREATED_BY VARCHAR(20),
MODIFIED_DATE DATE,
MODIFIED_BY VARCHAR(20),
NET_AMOUNT NUMBER(8,0),
STATUS CHAR(2),
PROC_DATE DATE,
PAY_DATE DATE,
FUND_CODE VARCHAR(2) DEFAULT '02',
MIN_HOA_ID VARCHAR(2),
PROJ_HOA_ID VARCHAR(2),
BASIC_SAL NUMBER,
SUCCESSSTORY_DED NUMBER
);
CREATE EXTERNAL TABLE IF NOT EXISTS pisprd_raw.DWMA_ACCTD_SALARIES 
(TRANSACTION_ID CHAR(13),
NAME VARCHAR(100),
GROSS_PAY NUMBER(18,4),
DEDUCTIONS NUMBER(18,4),
TRANSACTION_DATE DATE,
VOUCHER_NO CHAR(6),
CHEQUE_NO CHAR(6),
SRC_ID CHAR(8),
CHEQUE_DATE DATE,
PCC_INFO_CODE VARCHAR(9),
HOA_ID CHAR(2),
CLASS_ID CHAR(2),
EMP_ID VARCHAR(30),
SAL_MONTH CHAR(2),
SAL_YEAR CHAR(4),
FUND_CODE VARCHAR(2),
BATCH_ID VARCHAR(20),
PROC_NO VARCHAR(200),
REMARKS VARCHAR(500),
PROC_DATE DATE,
CREATED_DATE DATE,
MODIFIED_DATE DATE,
CREATED_BY VARCHAR(20),
MODIFIED_BY VARCHAR(20),
STATUS VARCHAR(2) DEFAULT '01',
NET_AMOUNT NUMBER(8,0),
PAY_DATE DATE,
INST_HOAID VARCHAR(2),
BASIC_SALARY NUMBER(10,0),
VENDOR_CODE VARCHAR(50)
);
CREATE EXTERNAL TABLE IF NOT EXISTS pisprd_raw.WCC_ACCT_TRANSACTIONS 
(TRANSACTION_ID CHAR(13),
TRANSACTION_TYPE VARCHAR(50),
VOUCHER_NO VARCHAR(10),
ACCOUNT_ID CHAR(8),
TRANSACTION_DATE DATE,
CREDIT NUMBER,
DEBIT NUMBER,
BALANCE NUMBER,
PCC_INFO_CODE VARCHAR(9),
FTR_NO CHAR(13),
E_PAYORDER_NO VARCHAR(11),
CREATED_DATE DATE,
CREATED_BY VARCHAR(20),
MODIFIED_DATE DATE,
MODIFIED_BY VARCHAR(20),
MEGA_CODE CHAR(4),
NIC_FLAG VARCHAR(1),
NIC_SENT_DATE DATE
);
CREATE EXTERNAL TABLE IF NOT EXISTS pisprd_raw.WCC_CLUSTER_MANDAL_DETAILS 
(DISTRICT_ID CHAR(2),
CLUSTER_ID CHAR(2),
MANDAL_ID CHAR(2),
CREATED_DATE DATE,
CREATED_BY VARCHAR(20),
MODIFIED_DATE DATE,
MODIFIED_BY VARCHAR(20),
IS_ACTIVE CHAR(1)
);
CREATE EXTERNAL TABLE IF NOT EXISTS pisprd_raw.WCC_CLUSTER_MASTER 
(DISTRICT_ID VARCHAR(2),
CLUSTER_ID VARCHAR(2),
CLUSTER_NAME VARCHAR(100),
SANC_YEAR VARCHAR(7),
PCC_INFO_CODE VARCHAR(9),
CREATED_DATE DATE,
CREATED_BY VARCHAR(7),
MODIFIED_BY VARCHAR(7),
MODIFIED_DATE DATE,
IS_ITDA VARCHAR(1)
);
CREATE EXTERNAL TABLE IF NOT EXISTS pisprd_raw.WCC_DISTRICT_MASTER 
(DISTRICT_ID CHAR(2),
DISTRICT_DESCRIPTION VARCHAR(30),
REGION_CODE CHAR(1),
STATE_CODE CHAR(2),
PROGRAM_TYPE CHAR(2),
ESTIMATE_START_DATE DATE,
WORKPROGRESS_START_DATE DATE,
ZONE_ID VARCHAR(3),
NEW_WORKPROGRESS_DATE DATE,
CREATED_DATE DATE,
CREATED_BY VARCHAR(20),
MODIFIED_DATE DATE,
MODIFIED_BY VARCHAR(20),
OLD_DNAME VARCHAR(100)
);
CREATE EXTERNAL TABLE IF NOT EXISTS pisprd_raw.WCC_HABITATION_MASTER 
(STATE_CODE CHAR(2),
DISTRICT_CODE CHAR(2),
MANDAL_CODE CHAR(2),
PANCHAYAT_CODE CHAR(2),
VILLAGE_CODE CHAR(3),
HABITATION_CODE CHAR(2),
HABITATION_NAME VARCHAR(100),
IS_UNDERCLUSTER CHAR(1),
CREATED_DATE DATE,
CREATED_BY VARCHAR(20),
MODIFIED_DATE DATE,
MODIFIED_BY VARCHAR(20)
);
CREATE EXTERNAL TABLE IF NOT EXISTS pisprd_raw.WCC_IWMP_PROJECT_MASTER 
(MEGA_CODE VARCHAR(4),
DISTRICT_ID VARCHAR(2),
CLUSTER_ID VARCHAR(2),
PCC_INFO_CODE VARCHAR(9),
STATUS CHAR(1),
START_DATE DATE,
END_DATE DATE,
VERSION VARCHAR(15),
REMARKS VARCHAR(500),
CREATED_DATE DATE,
CREATED_BY VARCHAR(20),
MODIFIED_DATE DATE,
MODIFIED_BY VARCHAR(20)
);
CREATE EXTERNAL TABLE IF NOT EXISTS pisprd_raw.WCC_MICROWTRSHD_HAB_MASTER 
(MEGA_CODE VARCHAR(30),
MICRO_CODE VARCHAR(30),
LOCATION_CODE CHAR(14),
CREATED_DATE DATE,
CREATED_BY VARCHAR(20),
MODIFIED_DATE DATE,
MODIFIED_BY VARCHAR(20)
);
CREATE EXTERNAL TABLE IF NOT EXISTS pisprd_raw.WCC_MICROWTRSHD_MASTER 
(MEGA_CODE VARCHAR(4),
MICRO_CODE VARCHAR(4),
MICRO_NAME VARCHAR(50),
WC_NAME VARCHAR(50),
PROPOSED_AREA NUMBER,
CREATED_DATE DATE,
CREATED_BY VARCHAR(20),
MODIFIED_DATE DATE,
MODIFIED_BY VARCHAR(20)
);
CREATE EXTERNAL TABLE IF NOT EXISTS pisprd_raw.WCC_MEGAWTRSHD_MASTER 
(MEGA_CODE VARCHAR(4),
MEGA_NAME VARCHAR(30),
DISTRICT_ID CHAR(2),
MANDAL_ID CHAR(2),
CEILING_AMOUNT NUMBER,
CREATED_DATE DATE,
CREATED_BY VARCHAR(20),
MODIFIED_DATE DATE,
MODIFIED_BY VARCHAR(20),
BATCH_ID VARCHAR(10),
PROJECT_NAME VARCHAR(100),
PROJECT_AREA NUMBER,
FY VARCHAR(10),
MICRO_COUNT NUMBER,
REV_CEILING_AMOUNT NUMBER,
IS_ITDA VARCHAR(1),
REV_PROJECT_AREA NUMBER
);
CREATE EXTERNAL TABLE IF NOT EXISTS pisprd_raw.WCC_PANCHAYAT_MASTER 
(STATE_CODE CHAR(2),
DISTRICT_CODE CHAR(2),
MANDAL_CODE CHAR(2),
PANCHAYAT_CODE CHAR(2),
ASSEMBLY_CODE CHAR(3),
PANCHAYAT_NAME VARCHAR(100),
PANCHAYAT_HEAD VARCHAR(25),
IS_UNDERCLUSTER CHAR(1),
CREATED_DATE DATE,
CREATED_BY VARCHAR(20),
MODIFIED_DATE DATE,
MODIFIED_BY VARCHAR(20)
);
CREATE EXTERNAL TABLE IF NOT EXISTS pisprd_raw.WCC_MANDAL_MASTER 
(DISTRICT_ID CHAR(2),
MANDAL_ID CHAR(2),
MANDAL_DESCRIPTION VARCHAR(30),
STATE_CODE CHAR(2),
IS_DROUGHT_MANDAL CHAR(1),
CREATED_DATE DATE,
CREATED_BY VARCHAR(20),
MODIFIED_DATE DATE,
MODIFIED_BY VARCHAR(20),
PCC_INFO_CODE VARCHAR(9)
);
CREATE EXTERNAL TABLE IF NOT EXISTS pisprd_raw.DWMA_ACCTD_CLASS_MASTER 
(HOA_ID CHAR(2),
CLASS_ID CHAR(2),
CLASS_NAME VARCHAR(100),
TYPE CHAR(1),
STATUS CHAR(1),
PROJECT_TYPE VARCHAR(20),
CLASS_CEILING NUMBER(18,4),
TRANS_TYPE CHAR(1),
REMARKS VARCHAR(200),
INST_TYPE CHAR(1),
CREATED_DATE DATE,
MODIFIED_DATE DATE,
CREATED_BY VARCHAR(20),
MODIFIED_BY VARCHAR(20),
CEILING_TYPE CHAR(2),
CLAIMANT_TYPE CHAR(2),
FLAG CHAR(1),
PFMS_HOA_ID VARCHAR(2)
);
CREATE EXTERNAL TABLE IF NOT EXISTS pisprd_raw.DWMA_ACCTD_HRMS_SAL_DETAILS 
(DISTRICT_ID CHAR(2),
CLUSTER_ID CHAR(2),
BATCH_ID VARCHAR(7),
EMPLOYEE_ID VARCHAR(50),
EMPLOYEE_NAME VARCHAR(200),
DESIG_ID CHAR(3),
SALARY_MONTH CHAR(2),
SALARY_YEAR CHAR(4),
SALARY NUMBER(18,4),
ARREARS NUMBER(18,4),
TOTAL_AMOUNT NUMBER(18,4),
ACCOUNT_NO VARCHAR(50),
IFSC_CODE CHAR(11),
BANK_NAME VARCHAR(100),
BANK_BRANCH_NAME VARCHAR(500),
REJECTED CHAR(1),
REJECTED_REASON VARCHAR(200),
IS_PULLED CHAR(1),
STATUS VARCHAR(20),
FTR_NO CHAR(13),
FTR_DATE DATE,
R_REJECTED DATE,
USER_NAME VARCHAR(50),
UPDATED_STATUS CHAR(1),
CLEARED_DATE DATE,
R_DATE DATE,
DOWNLOAD_DATE DATE,
CUG NUMBER(18,4),
CELL_DEDUCTION NUMBER(18,4),
FTE_IT NUMBER(18,4),
FTE_PT NUMBER(18,4),
PCC_INFO_CODE VARCHAR(9),
ENROLLMENT_AMOUNT NUMBER(18,4),
FTE_EPF NUMBER(18,4),
FTE_LOP NUMBER(18,4),
FTE_OD NUMBER(18,4),
VA NUMBER(18,4),
BCA NUMBER(18,4),
FTE_WAGEALLOWANCE NUMBER(18,4),
FTE_CONVEYANCE NUMBER(18,4),
FTE_TA NUMBER(18,4),
TOTAL_GROSS NUMBER(18,4),
CREATED_DATE DATE,
MODIFIED_DATE DATE,
CREATED_BY VARCHAR(20),
MODIFIED_BY VARCHAR(20),
FTE_BASIC NUMBER,
IS_ITDA VARCHAR(1),
SPECIAL_DEDUCTION NUMBER,
NEW_OWN_MOBILE_DED NUMBER,
EPF_PREV_DED NUMBER,
ENHANCED_WAGEALLOWANCE NUMBER
);
CREATE EXTERNAL TABLE IF NOT EXISTS pisprd_raw.DWMA_ACCTD_TRANSACTIONS 
(TRANSACTION_ID CHAR(13),
TRANSACTION_TYPE VARCHAR(50),
VOUCHER_NO VARCHAR(10),
ACCOUNT_ID CHAR(8),
TRANSACTION_DATE DATE,
CREDIT NUMBER(18,4),
DEBIT NUMBER(18,4),
BALANCE NUMBER(18,4),
PCC_INFO_CODE VARCHAR(9),
FTR_NO VARCHAR(13),
CREATED_DATE DATE,
MODIFIED_DATE DATE,
CREATED_BY VARCHAR(20),
MODIFIED_BY VARCHAR(20)
);
CREATE EXTERNAL TABLE IF NOT EXISTS pisprd_raw.DC_WORK_REGISTRATION 
(WORK_CODE VARCHAR(18),
WORK_CATEGORY_CODE CHAR(2),
WORK_TYPE_CODE VARCHAR(3),
WORK_NAME VARCHAR(200),
WORK_NAME_TELUGU VARCHAR(200),
WORK_DESCRIPTION VARCHAR(300),
WORK_DESCRIPTION_TELUGU VARCHAR(300),
STATUS_CODE NUMBER,
FARMER_NAME VARCHAR(1000),
SURVEY_NUMBER VARCHAR(1000),
PRIORITY_NUMBER NUMBER,
TECHNICAL_APPROVER_CODE VARCHAR(12),
ADMINISTRATIVE_APPROVER_CODE VARCHAR(12),
TECHNICAL_APPROVED_DATE DATE,
ADMINISTRATIVE_APPROVED_DATE DATE,
PROPOSER_CODE NUMBER,
WORK_EXEC_AGENCY_CODE NUMBER,
PLANNED_START_DATE DATE,
DURATION NUMBER,
ACTUAL_START_DATE DATE,
ACTUAL_END_DATE DATE,
TOTAL_COST NUMBER,
TOTAL_MANDAYS NUMBER,
INTIMATIONLETTER_REFNO VARCHAR(100),
INTIMATIONLETTER_DATE DATE,
PCC_INFO_CODE VARCHAR(9),
GPS_LONGITUDE VARCHAR(20),
GPS_LATITUDE VARCHAR(20),
OFFICIAL_NAME VARCHAR(50),
OFFICIAL_DESIGNATION VARCHAR(100),
HABITATION_CODE VARCHAR(5),
HABITATION_NAME VARCHAR(100),
ORIGINAL_PROJECT_COST NUMBER,
LOCATION VARCHAR(150),
LOCATION_TELUGU VARCHAR(200),
COMPLETION_DATE DATE,
PROGRAM_CODE CHAR(2),
SECTOR_CODE CHAR(1),
WS_CLDP_CODE VARCHAR(8),
LAND_OWNERSHIP CHAR(1),
NO_OF_REESTIMATIONS NUMBER,
PROJECT_ID VARCHAR(3),
VERSION VARCHAR(20),
AMOUNT_UNSKILLED NUMBER,
AMOUNT_SKILLED NUMBER,
AMOUNT_MATERIAL NUMBER,
WORK_COMPLETION_PERCENTAGE NUMBER,
WORK_COMPLET_PERCENT_DATE DATE,
VSS_NAME VARCHAR(100),
FOREST_BLOCK_NAME VARCHAR(100),
PR_WEM_CODE VARCHAR(12),
WSA_CODE VARCHAR(7),
CREATED_DATE DATE,
MODIFIED_DATE DATE,
CREATED_BY VARCHAR(20),
MODIFIED_BY VARCHAR(20),
ELGIBILITY_AMT_2013_14 NUMBER,
TECHNICAL_SANCTION_CODE VARCHAR(50),
TECHNICAL_SANCTION_DATE DATE,
AMOUNT_TO_BE_SPENT NUMBER,
SPILLOVER_REMARKS VARCHAR(1000),
WORKIMAGE BLOB,
BUILDING_STATUS NUMBER,
PHYSICAL_COMPLETION_DATE DATE,
IS_LAST_PAYMENT_DONE VARCHAR(1),
GOI_WORK_CODE VARCHAR(30),
GOI_PHOTO_STAGE NUMBER,
GOI_ASSET_ID VARCHAR(20),
DID VARCHAR(2),
MID VARCHAR(2),
PID VARCHAR(2),
WORK_COMP_REMARK_CO VARCHAR(1000),
WORK_COMP_REMARK_DAO VARCHAR(1000),
WORK_COMP_REMARK_EE VARCHAR(1000),
AMOUNT_UNSKILLED_ACTUAL NUMBER,
AMOUNT_SKILLED_ACTUAL NUMBER,
AMOUNT_MATERIAL_ACTUAL NUMBER,
TOTAL_COST_ACTUAL NUMBER,
STATUS_ADJUSTED CHAR(1),
CID VARCHAR(2)
);
  and 2nd file : doc where i have to updated:  












TOPIC
HIVE TABLE CREATION
Version
DATE OF CREATION
24-Feb-2025
1.0
DATE OF UPDATION
7-Mar-2025
1.1




















STEPS FOR HIVE TABLE CREATION
HDFS path creation
 1.1 HDFS path to be discussed with Patrick before folder creation. 
Sample path: '/user/RAW/dept_name/org_name/sub_org_name/database_name/table_name/’
Example for SERP NTR BHAROSA: /user/RAW/prrd/serp/pensionsap/payorder_info_gsws/
1.2 Folders can be created in a single execution by copy pasting below commands in putty.
hdfs dfs -mkdir /user/RAW/dept_name/hod_name/entityname/database_name/table_name1/
hdfs dfs -mkdir /user/RAW/dept_name/hod_name/entityname/database_name/table_name2/
hdfs dfs -mkdir /user/RAW/dept_name/hod_name/entityname/database_name/table_name3/
hdfs dfs -mkdir /user/RAW/dept_name/hod_name/entityname/database_name/table_name4/
hdfs dfs -mkdir /user/RAW/dept_name/hod_name/entityname/database_name/table_name5/

1.3 Update one table’s location in ‘HDFS path’ sheet in ‘Ingested Table info’ excel


1.4 Table details
Update the list of tables to be ingested into Data Lake in the ‘Ingestion & Hive Status’ sheet in ‘Ingested Table info’ excel.

1.5 Data ingestion
Talend team will use the list of tables and their path for placing the respective files during ingestion.





Column Mapping
Source data type
Hive data type
Comments
Numeric
NUMERIC
No change
DATE
DATE_RENAMED
When a column name in DDL is not acceptable in Hive, then rename the column with suffix ‘_renamed’ and mention this as comment in the first line of HQL. /For this table the date column is changed as date_renamed./
Character varying 5
VARCHAR(5)
Character varying 5 is equivalent to Varchar(5) in Hive.
String
cast(string as date)
If the data is in date format but is stored in string and requirement is to modify the sting to date then use cast
bigint()
bigint
Hive bigint type is a 64-bit signed integer, which can store values between -9,223,372,036,854,775,808 and  9,223,372,036,854,775,807. So Hive does not support precision/scale for bigint data type.
smallint()
smallint
Hive’s smallint is a  2-byte signed integer, and its size is fixed. So,specifying a length [eg: smallint(19,0)] is not supported.
int()
int
Hive’s int type is a 4-byte signed integer,and its size is fixed, so specifying length [eg: int(10,0) ] doesn’t support.
float()
float
Hive’s  float type is a 4-byte single-precision floating-point number, and its precision is fixed, so specifying precision [e.g., Float(53)] is not supported.
datetime (-) / datetime2(-)
timestamp
Hive's Timestamp type is used for date and time values, and it has a precision of up to nanoseconds. DateTime2 is a data type from SQL Server, and Hive does not support it. Instead, Hive's Timestamp type serves a similar purpose.
date(-)
date
Hive supports the Date data type. It doesn't support precision/scale for Date, e.g., Date(10), because the Date type in Hive only stores the year, month, and day, without a time component or variable precision.
varchar(-1)
varchar(1)
In Hive, Varchar(-1) is not supported. However, some databases like SQL Server support Varchar(-1), which is equivalent to Varchar(max).
varchar2/nvarchar/nvarchar2
varchar
Varchar2/NVarChar/NVarChar2. These data types are specific to Oracle and SQL Server databases. Hive doesn’t support these data types.
byte
binary/varbinary
Hive provides the following data types for storing binary data:
BINARY: Stores binary data as a sequence of bytes.
VARBINARY: Stores binary data as a sequence of bytes with a variable length.
text
varchar
Hive does not support TEXT data type.
varchar(max)
varchar(500)
In Hive varchar(max) doesn’t support. Take varchar(500) instead of varchar(max). Based on the data analysis we will recreate table with higher values if needed.
 



SAMPLE SOURCE DDL
db_name.table_name (
id NUMERIC,
name Character varying 5,
INSERTED_DATE DATE(7),
INSERTED_TIME TIMESTAMP(7)
SAMPLE HIVE DDL
CREATE DATABASE IF NOT EXISTS db_name_raw;
CREATE EXTERNAL TABLE IF NOT EXISTS db_name_raw.table_name (
id NUMERIC,
name VARCHAR(5),
INSERTED_DATE DATE,
INSERTED_TIME TIMESTAMP
)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY '|'
LINES TERMINATED BY '\n'
STORED AS TEXTFILE
LOCATION 'hdfs:///user/RAW/dept/org/suborg/db_name/table_name/';
GENERAL POINTS
IMPORTANT: No extra space or tabs should be present in the DDL scripts else table creation will not be executed by Hive.
Delimiter should be single pipe - |
In location, RAW alone should be in upper case. Remaining all ‘Table name, db schema name, column names, org, suborg1 folder names’ should be in lower case.
RAW will be a replica of the source. So we will use the same values for tables, column names, column length. 
If needed, the column data type will be changed based on the equivalent data type in Hive. Else we will retain the one given.
If date(7) is given as data type, then connect to the source and analyze the data. Based on the data present in the column we have to finalize the Hive data type. (ex: conversion by using caste)
Make note of the data types which are modified in Table creation comments section of ‘Ingestion & Hive Status’ sheet in ‘Ingested Table info’ excel, so we can check with source to cross verify if data is correct after loading with modified data type.
Schedule Oozie jobs to merge daily files into a single file at the end of every month for all daily tables. For weekly and monthly tables, based on size of file, merge multiple files into a single file.
Create one HQL file per DB for all departments. Move the HQL file to local and execute the table creation. If the tables are created successfully using the HQL file, then place the file in the raw HDFS path at DB level of the respective departments (where table folders are present). Don’t place it inside any table folder. 
Example : For GSWS, place here at DB level : /user/RAW/gsws/ro_user/GSWS.hql

Reference links
https://cwiki.apache.org/confluence/display/hive/languagemanual+types#LanguageManualTypes-HiveDataTypes
https://hive.apache.org/docs/latest/languagemanual-ddl_27362034/
https://hive.apache.org/docs/latest/languagemanual-dml_27362036/
https://hive.apache.org/docs/latest/
Reference screenshots
For GSWS : 
Table_ Name : GSWS_MANDAL_MASTER1
 1. Create HDFS path:'hdfs:///user/RAW/DemoFiles/ro_user/gsws_mandal_master1/’
 
2. Using Hive DDL, created table
 
 3. If we run Hive query Select * -- which will give zero records because there is no data, but it will be executed since the table is created.

Select count(*) from ro_user.GSWS_MANDAL_MASTER1
 
 4.Talend job will ingest data by creating files in the path :LOCATION hdfs:///user/RAW/DemoFiles/ro_user/gsws_mandal_master1/
 
DATA VALIDATION
Run Hive query Select * and select count(*) -- which will give the ingested records
  


STEPS TO CHANGE HIVE DDL to HQL : 
Go to FILE > SAVE AS

Change the file extension from .txt to .hql
Click on Save as Type : All types(*.*)



SET THE LANGUAGE IN SQL FORMAT: 







HIVE DDL UPDATION : 
CREATE DATABASE IF NOT EXISTS <DB NAME>_RAW; -- should have RAW suffix
CREATE EXTERNAL TABLE IF NOT EXISTS <DB NAME>_RAW.<Table Name>
Don’t keep any spaces in between any lines. Remove all extra spaces.
When a column name in DDL is not acceptable in Hive, then rename the column with the suffix ‘_renamed’ and mention this as a comment in the first line of HQL. 
Use Comments to mention any changes made to the DDL: 
	- — : (Double hyphen) Single Line Comment
	/* …………..   */  : Multiple Line Comment
For Example : 
/* Below are the changes done to the column names or data types in this HQL. The renamed columns are as follows
1. For stemi_raw.user_mobile  table, S.NO column changed as SNO
2. For stemi_raw.patient_ecg_report table, commit column changed as commit_renamed
3. For stemi_raw.patient_medical_history,commit column changed as commit_renamed
*/



